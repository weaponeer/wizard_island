/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (         568218.375            4750217   944.400024414062 )  // 0 v0
    (          573720.75          4752609.5   944.400024414062 )  // 1 v1
    (         565825.875          4755719.5   944.400024414062 )  // 2 v3
    (          571328.25            4758112   944.400024414062 )  // 3 v2
    (         568218.375            4750217     9944.400390625 )  // 4 v4
    (          573720.75          4752609.5     9944.400390625 )  // 5 v5
    (         565825.875          4755719.5     9944.400390625 )  // 6 v7
    (          571328.25            4758112     9944.400390625 )  // 7 v6
);

edges
(
);

blocks
(
    hex (0 1 3 2 4 5 7 6) b0 (128 128 128) simpleGrading (1 1 1)  // b0 (v0 v1 v2 v3 v4 v5 v6 v7)
);

boundary
(
    inlet
    {
        type wall;
        faces
        (
            (3 2 6 7)  // f-b0-n (v2 v3 v7 v6)
        );
    }
    west
    {
        type wall;
        faces
        (
            (0 4 6 2)  // f-b0-w (v0 v4 v7 v3)
        );
    }
    top
    {
        type wall;
        faces
        (
            (4 5 7 6)  // f-b0-t (v4 v5 v6 v7)
        );
    }
    outlet
    {
        type wall;
        faces
        (
            (0 1 5 4)  // f-b0-s (v0 v1 v5 v4)
        );
    }
    east
    {
        type wall;
        faces
        (
            (1 3 7 5)  // f-b0-n (v1 v2 v6 v5)
        );
    }
    ground
    {
        type wall;
        faces
        (
            (0 2 3 1)  // f-b0-b (v0 v3 v2 v1)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
